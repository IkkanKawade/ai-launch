"use client";

import { useState } from "react";
import Link from "next/link";
import { useAuth } from "@/context/AuthContext";
import LoginPage from "@/components/LoginPage";
import JSZip from "jszip";

interface FormData {
  productName: string;
  tone: 'school' | 'influencer';
}

export default function Home() {
  const { isAuthenticated, logout, user } = useAuth();
  
  const [formData, setFormData] = useState<FormData>({
    productName: "",
    tone: "school",
  });

  const [generatedContent, setGeneratedContent] = useState<{
    email1: string;
    email2: string;
    email3: string;
    email4: string;
    email5: string;
    email6: string;
    script: string;
  } | null>(null);

  const [isGenerating, setIsGenerating] = useState(false);
  const [collapsedSections, setCollapsedSections] = useState<{
    email1: boolean;
    email2: boolean;
    email3: boolean;
    email4: boolean;
    email5: boolean;
    email6: boolean;
    script: boolean;
  }>({
    email1: false,
    email2: false,
    email3: false,
    email4: false,
    email5: false,
    email6: false,
    script: false,
  });
  const [showStrategyDropdown, setShowStrategyDropdown] = useState(false);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const toggleSection = (section: keyof typeof collapsedSections) => {
    setCollapsedSections(prev => ({
      ...prev,
      [section]: !prev[section]
    }));
  };

  const generateContent = async () => {
    setIsGenerating(true);
    
    const email1 = generateEmail1(formData);
    const email2 = generateEmail2(formData);
    const email3 = generateEmail3(formData);
    const email4 = generateEmail4(formData);
    const email5 = generateEmail5(formData);
    const email6 = generateEmail6(formData);
    const script = generateScript(formData);

    setGeneratedContent({
      email1,
      email2,
      email3,
      email4,
      email5,
      email6,
      script,
    });
    
    setIsGenerating(false);
  };

  const downloadAsGoogleDoc = (content: string, filename: string) => {
    // Googleドキュメント形式でダウンロードするためのHTML生成
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>${filename}</title>
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; margin: 40px; }
        pre { white-space: pre-wrap; font-family: inherit; }
    </style>
</head>
<body>
    <pre>${content}</pre>
</body>
</html>`;

    const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${filename}.html`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  const downloadAllAsZip = async () => {
    if (!generatedContent) return;

    const zip = new JSZip();
    
    // HTMLテンプレート関数
    const createHtmlContent = (title: string, content: string) => {
      return `<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <style>
        body { 
            font-family: 'Hiragino Sans', 'Yu Gothic', 'Meiryo', sans-serif; 
            line-height: 1.8; 
            margin: 40px; 
            color: #333;
            background-color: #f9f9f9;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { 
            color: #2563eb; 
            border-bottom: 3px solid #2563eb;
            padding-bottom: 10px;
            margin-bottom: 30px;
        }
        pre { 
            white-space: pre-wrap; 
            font-family: inherit; 
            background: #f8f9fa;
            padding: 20px;
            border-radius: 6px;
            border-left: 4px solid #2563eb;
            margin: 20px 0;
        }
        .footer {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            text-align: center;
            color: #6b7280;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>${title}</h1>
        <pre>${content}</pre>
        <div class="footer">
            Generated by AIローンチくん | PLF式ローンチシーケンス自動生成ツール
        </div>
    </div>
</body>
</html>`;
    };

    // 各メールとスクリプトをZIPに追加
    zip.file(
      `01_${formData.productName}_LP情報.html`,
      createHtmlContent(`【メール①】LP情報 - ${formData.productName}`, generatedContent.email1)
    );
    
    zip.file(
      `02_${formData.productName}_資料案内.html`,
      createHtmlContent(`【メール②】資料案内 & 事前質問フォーム - ${formData.productName}`, generatedContent.email2)
    );
    
    zip.file(
      `03_${formData.productName}_質問回答.html`,
      createHtmlContent(`【メール③】質問への回答 - ${formData.productName}`, generatedContent.email3)
    );
    
    zip.file(
      `04_${formData.productName}_朝メール.html`,
      createHtmlContent(`【メール④】募集当日の朝メール - ${formData.productName}`, generatedContent.email4)
    );
    
    zip.file(
      `05_${formData.productName}_募集開始.html`,
      createHtmlContent(`【メール⑤】募集開始 & 面談希望日提出 - ${formData.productName}`, generatedContent.email5)
    );
    
    zip.file(
      `06_${formData.productName}_面談実施.html`,
      createHtmlContent(`【メール⑥】面談実施 - ${formData.productName}`, generatedContent.email6)
    );
    
    zip.file(
      `00_${formData.productName}_面談スクリプト.html`,
      createHtmlContent(`【面談スクリプト】${formData.productName}`, generatedContent.script)
    );

    // README.txtを追加
    const readmeContent = `${formData.productName} - PLF式ローンチシーケンス
================================================================

このZIPファイルには以下のファイルが含まれています：

📧 メールシーケンス（全6通）
├── 01_LP情報.html
├── 02_資料案内.html  
├── 03_質問回答.html
├── 04_朝メール.html
├── 05_募集開始.html
└── 06_面談実施.html

📋 面談資料
└── 00_面談スクリプト.html

🎯 使用方法
1. 各HTMLファイルをブラウザで開いて内容を確認
2. GoogleドライブにアップロードしてGoogleドキュメントとして編集
3. メール配信システムにコピー&ペーストして利用

🚀 生成設定
・商品名: ${formData.productName}
・文章トーン: ${formData.tone === 'school' ? 'オンラインスクール系（丁寧・フォーマル）' : '個人インフルエンサー系（親しみやすい・カジュアル）'}
・生成日時: ${new Date().toLocaleString('ja-JP')}

Generated by AIローンチくん
https://ai-launch.vercel.app
`;

    zip.file('README.txt', readmeContent);

    // ZIPファイルを生成してダウンロード
    try {
      const content = await zip.generateAsync({ type: 'blob' });
      const url = URL.createObjectURL(content);
      const link = document.createElement('a');
      link.href = url;
      link.download = `${formData.productName}_PLFローンチシーケンス_${new Date().toISOString().split('T')[0]}.zip`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
    } catch (error) {
      console.error('ZIP生成エラー:', error);
      alert('ZIPファイルの生成に失敗しました。しばらく時間をおいて再度お試しください。');
    }
  };

  // 認証されていない場合はログインページを表示
  if (!isAuthenticated) {
    return <LoginPage />;
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm py-4">
        <div className="max-w-7xl mx-auto px-4 flex justify-between items-center">
          <div className="flex items-center gap-8">
            <div>
              <h1 className="text-2xl font-bold bg-gradient-to-r from-red-500 via-yellow-500 via-green-500 via-blue-500 via-indigo-500 to-purple-500 bg-clip-text text-transparent">
                AIローンチくん
              </h1>
              <p className="text-gray-600 mt-1">
                商品情報を入力すると、メールシーケンスと面談スクリプトを自動生成します
              </p>
            </div>
            <nav className="hidden md:flex space-x-4">
              <span className="text-blue-600 px-3 py-2 rounded-md text-sm font-medium bg-blue-50">
                生成ツール
              </span>
              <Link 
                href="/library" 
                className="text-gray-600 hover:text-gray-900 px-3 py-2 rounded-md text-sm font-medium hover:bg-gray-50"
              >
                📚 ローンチライブラリー
              </Link>
            </nav>
          </div>
          <div className="flex items-center gap-4">
            <span className="text-sm text-gray-600">
              こんにちは、{user}さん
            </span>
            <button
              onClick={logout}
              className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 text-sm"
            >
              ログアウト
            </button>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 py-6">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 h-full">
          {/* 左カラム：入力フォーム */}
          <div className="lg:col-span-1">
            <div className="bg-white rounded-lg shadow-md p-6 sticky top-6">
              <h2 className="text-xl font-semibold mb-4">商品情報入力</h2>
              
              <div className="space-y-6">
                <div className="text-center py-8">
                  <div className="text-6xl mb-4">🚀</div>
                  <h3 className="text-xl font-semibold text-gray-800 mb-2">
                    PLF式ローンチ自動生成
                  </h3>
                  <p className="text-gray-600 text-sm">
                    商品名を入力するだけで、実績あるローンチシーケンスを自動生成
                  </p>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    商品・サービス名 *
                  </label>
                  <input
                    type="text"
                    name="productName"
                    value={formData.productName}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg"
                    placeholder="例: ノマドエンジニア育成講座"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    文章のトーン *
                  </label>
                  <select
                    name="tone"
                    value={formData.tone}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg"
                  >
                    <option value="school">オンラインスクール系（丁寧・フォーマル）</option>
                    <option value="influencer">個人インフルエンサー系（親しみやすい・カジュアル）</option>
                  </select>
                </div>

                <button
                  onClick={generateContent}
                  disabled={isGenerating || !formData.productName}
                  className="w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed font-medium"
                >
                  {isGenerating ? "生成中..." : "コンテンツを生成"}
                </button>
              </div>

              {/* PLF式ローンチ基本知識 */}
              <div className="bg-blue-50 rounded-lg p-4 mt-6">
                <div 
                  className="cursor-pointer flex justify-between items-center"
                  onClick={() => setShowStrategyDropdown(!showStrategyDropdown)}
                >
                  <h3 className="text-lg font-semibold text-blue-700">📚 PLF式ローンチの基本知識</h3>
                  <div className="text-blue-700 text-xl">
                    {showStrategyDropdown ? '▲' : '▼'}
                  </div>
                </div>
                
                {showStrategyDropdown && (
                  <div className="mt-4 space-y-4">
                    <div className="bg-white p-4 rounded-lg border-l-4 border-blue-500">
                      <h4 className="font-semibold text-blue-700 mb-2">📖 PLF（Product Launch Formula）とは？</h4>
                      <div className="text-sm text-gray-700 space-y-2">
                        <p>PLFは、ジェフ・ウォーカーが開発した商品・サービスのローンチ手法です。従来の「いきなり販売」ではなく、段階的に価値を提供しながら信頼関係を構築し、最終的な購買につなげる手法です。</p>
                        <p><strong>特徴:</strong> 高いコンバージョン率（通常の3-10倍）と顧客満足度を実現</p>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg border-l-4 border-green-500">
                      <h4 className="font-semibold text-green-700 mb-2">🔄 PLFの基本構造</h4>
                      <div className="text-sm text-gray-700 space-y-2">
                        <p><strong>Pre-Launch（プレローンチ）:</strong> 価値ある情報を無料で提供し、信頼関係を構築する期間</p>
                        <p><strong>Launch（ローンチ）:</strong> 実際の商品・サービスを販売する期間</p>
                        <p><strong>Post-Launch（ポストローンチ）:</strong> 購入者へのフォローアップと次回ローンチの準備</p>
                        <p>各段階で「コンテンツ → コミュニティ → 販売」の流れを作ることが重要です。</p>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg border-l-4 border-orange-500">
                      <h4 className="font-semibold text-orange-700 mb-2">🎯 6つのメールシーケンスの役割</h4>
                      <div className="text-sm text-gray-700 space-y-2">
                        <p><strong>メール①-②:</strong> 関心を引き、価値ある情報を提供して信頼関係を構築</p>
                        <p><strong>メール③-④:</strong> 疑問や不安を解消し、期待値を高める</p>
                        <p><strong>メール⑤-⑥:</strong> 限定性と緊急性を演出し、購買行動を促進</p>
                        <p>各メールは独立しているのではなく、全体として一つのストーリーを構成しています。</p>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg border-l-4 border-purple-500">
                      <h4 className="font-semibold text-purple-700 mb-2">💡 PLF成功のポイント</h4>
                      <div className="text-sm text-gray-700 space-y-2">
                        <p><strong>価値先行:</strong> 売り込み前に価値ある情報を提供する</p>
                        <p><strong>ストーリーテリング:</strong> 感情に訴えかける物語を作る</p>
                        <p><strong>社会的証明:</strong> 他者の成功事例や推薦を活用する</p>
                        <p><strong>希少性と緊急性:</strong> 限定感と時間的プレッシャーを演出する</p>
                        <p><strong>段階的なコミット:</strong> 小さな「Yes」を積み重ねて最終的な購買につなげる</p>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg border-l-4 border-red-500">
                      <h4 className="font-semibold text-red-700 mb-2">⚠️ よくある失敗パターン</h4>
                      <div className="text-sm text-gray-700 space-y-2">
                        <p><strong>価値提供不足:</strong> 売り込みばかりで価値ある情報が少ない</p>
                        <p><strong>タイミングの問題:</strong> メール配信間隔が適切でない（短すぎる・長すぎる）</p>
                        <p><strong>対象不明確:</strong> ターゲット顧客が明確でない</p>
                        <p><strong>一貫性の欠如:</strong> メール間でメッセージが統一されていない</p>
                        <p><strong>フォローアップ不足:</strong> 購入後の顧客サポートが不十分</p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* 中央カラム：メール出力 */}
          <div className="lg:col-span-1">
            {generatedContent ? (
              <div className="space-y-4">
                {/* 一括ダウンロードボタン */}
                <div className="bg-purple-50 rounded-lg p-4 border border-purple-200">
                  <div className="flex items-center justify-between">
                    <div>
                      <h3 className="text-lg font-semibold text-purple-700 mb-1">📦 一括ダウンロード</h3>
                      <p className="text-sm text-purple-600">すべてのメールとスクリプトをZIPファイルでダウンロード</p>
                    </div>
                    <button
                      onClick={downloadAllAsZip}
                      className="bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 font-medium flex items-center gap-2"
                    >
                      📥 ZIPダウンロード
                    </button>
                  </div>
                </div>
                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('email1')}
                  >
                    <h3 className="text-lg font-semibold text-indigo-700">
                      【メール①】LP情報
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.email1, `${formData.productName}_メール01_LP情報`);
                        }}
                        className="px-3 py-1 bg-indigo-100 text-indigo-700 rounded-md text-xs hover:bg-indigo-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-indigo-700">
                        {collapsedSections.email1 ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.email1 && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.email1}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>

                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('email2')}
                  >
                    <h3 className="text-lg font-semibold text-blue-700">
                      【メール②】資料案内 & 事前質問フォーム
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.email2, `${formData.productName}_メール02_資料案内`);
                        }}
                        className="px-3 py-1 bg-blue-100 text-blue-700 rounded-md text-xs hover:bg-blue-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-blue-700">
                        {collapsedSections.email2 ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.email2 && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.email2}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>

                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('email3')}
                  >
                    <h3 className="text-lg font-semibold text-green-700">
                      【メール③】質問への回答
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.email3, `${formData.productName}_メール03_質問回答`);
                        }}
                        className="px-3 py-1 bg-green-100 text-green-700 rounded-md text-xs hover:bg-green-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-green-700">
                        {collapsedSections.email3 ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.email3 && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.email3}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>

                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('email4')}
                  >
                    <h3 className="text-lg font-semibold text-yellow-700">
                      【メール④】募集当日の朝メール
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.email4, `${formData.productName}_メール04_朝メール`);
                        }}
                        className="px-3 py-1 bg-yellow-100 text-yellow-700 rounded-md text-xs hover:bg-yellow-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-yellow-700">
                        {collapsedSections.email4 ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.email4 && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.email4}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>

                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('email5')}
                  >
                    <h3 className="text-lg font-semibold text-red-700">
                      【メール⑤】募集開始 & 面談希望日提出
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.email5, `${formData.productName}_メール05_募集開始`);
                        }}
                        className="px-3 py-1 bg-red-100 text-red-700 rounded-md text-xs hover:bg-red-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-red-700">
                        {collapsedSections.email5 ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.email5 && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.email5}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>

                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('email6')}
                  >
                    <h3 className="text-lg font-semibold text-orange-700">
                      【メール⑥】面談実施
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.email6, `${formData.productName}_メール06_面談実施`);
                        }}
                        className="px-3 py-1 bg-orange-100 text-orange-700 rounded-md text-xs hover:bg-orange-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-orange-700">
                        {collapsedSections.email6 ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.email6 && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.email6}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>

                <div className="bg-white rounded-lg shadow-md">
                  <div 
                    className="p-4 cursor-pointer flex justify-between items-center hover:bg-gray-50"
                    onClick={() => toggleSection('script')}
                  >
                    <h3 className="text-lg font-semibold text-purple-700">
                      【スクリプト】面談用トークスクリプト
                    </h3>
                    <div className="flex items-center gap-2">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          downloadAsGoogleDoc(generatedContent.script, `${formData.productName}_面談スクリプト`);
                        }}
                        className="px-3 py-1 bg-purple-100 text-purple-700 rounded-md text-xs hover:bg-purple-200 flex items-center gap-1"
                      >
                        📄 ダウンロード
                      </button>
                      <div className="text-purple-700">
                        {collapsedSections.script ? '▼' : '▲'}
                      </div>
                    </div>
                  </div>
                  {!collapsedSections.script && (
                    <div className="px-4 pb-4">
                      <div className="bg-gray-50 p-4 rounded-md max-h-96 overflow-y-auto">
                        <pre className="whitespace-pre-wrap text-xs text-gray-800">
                          {generatedContent.script}
                        </pre>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            ) : (
              <div className="bg-white rounded-lg shadow-md p-6 text-center">
                <div className="text-gray-400 mb-4">
                  <svg className="w-16 h-16 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                </div>
                <h3 className="text-lg font-medium text-gray-600 mb-2">
                  生成されたコンテンツがここに表示されます
                </h3>
                <p className="text-sm text-gray-500">
                  左側のフォームに商品情報を入力して、「コンテンツを生成」ボタンを押してください
                </p>
              </div>
            )}
          </div>

          {/* 右カラム：個別ポイント解説 */}
          <div className="lg:col-span-1">
            {generatedContent ? (
              <div className="space-y-4">
                {/* メール①の解説 */}
                {!collapsedSections.email1 && (
                  <div className="bg-blue-50 rounded-lg p-4 border-l-4 border-blue-500">
                    <h3 className="font-semibold text-blue-700 mb-2">【メール①】戦略ポイント</h3>
                    <ul className="text-sm text-gray-700 space-y-1">
                      <li>• 信頼関係の構築から開始</li>
                      <li>• 資料で価値を先行提供</li>
                      <li>• 参加フローの明確化</li>
                      <li>• 迷惑メール対策も忘れずに</li>
                    </ul>
                  </div>
                )}

                {/* メール②の解説 */}
                {!collapsedSections.email2 && (
                  <div className="bg-green-50 rounded-lg p-4 border-l-4 border-green-500">
                    <h3 className="font-semibold text-green-700 mb-2">【メール②】戦略ポイント</h3>
                    <ul className="text-sm text-gray-700 space-y-1">
                      <li>• アンケート結果を活用</li>
                      <li>• 講座内容への反映をアピール</li>
                      <li>• Q&A形式で不安を解消</li>
                      <li>• 次回募集への期待感醸成</li>
                    </ul>
                  </div>
                )}

                {/* メール③の解説 */}
                {!collapsedSections.email3 && (
                  <div className="bg-yellow-50 rounded-lg p-4 border-l-4 border-yellow-500">
                    <h3 className="font-semibold text-yellow-700 mb-2">【メール③】戦略ポイント</h3>
                    <ul className="text-sm text-gray-700 space-y-1">
                      <li>• 募集開始の最終予告</li>
                      <li>• よくある質問を事前回答</li>
                      <li>• 申請フォームの詳細説明</li>
                      <li>• 心理的準備を整える</li>
                    </ul>
                  </div>
                )}

                {/* メール④の解説 */}
                {!collapsedSections.email4 && (
                  <div className="bg-red-50 rounded-lg p-4 border-l-4 border-red-500">
                    <h3 className="font-semibold text-red-700 mb-2">【メール④】戦略ポイント</h3>
                    <ul className="text-sm text-gray-700 space-y-1">
                      <li>• 明確な行動指示（申請URL）</li>
                      <li>• プログラム概要の再確認</li>
                      <li>• 限定性の強調（先着制）</li>
                      <li>• 配信停止オプションの提供</li>
                    </ul>
                  </div>
                )}

                {/* メール⑤の解説 */}
                {!collapsedSections.email5 && (
                  <div className="bg-orange-50 rounded-lg p-4 border-l-4 border-orange-500">
                    <h3 className="font-semibold text-orange-700 mb-2">【メール⑤】戦略ポイント</h3>
                    <ul className="text-sm text-gray-700 space-y-1">
                      <li>• 面談の目的と流れを明確化</li>
                      <li>• 15分間の効率的な構成</li>
                      <li>• リラックスした雰囲気作り</li>
                      <li>• 個別スケジュール調整</li>
                    </ul>
                  </div>
                )}

                {/* スクリプトの解説 */}
                {!collapsedSections.script && (
                  <div className="bg-purple-50 rounded-lg p-4 border-l-4 border-purple-500">
                    <h3 className="font-semibold text-purple-700 mb-2">【面談スクリプト】戦略ポイント</h3>
                    <ul className="text-sm text-gray-700 space-y-1">
                      <li>• 審査形式で価値を高める</li>
                      <li>• 仮クロージングを2回実施</li>
                      <li>• 不安要素を事前に全て解消</li>
                      <li>• 合格発表で特別感を演出</li>
                    </ul>
                  </div>
                )}

              </div>
            ) : (
              <div className="bg-white rounded-lg shadow-md p-6 sticky top-6">
                <h2 className="text-xl font-semibold mb-4 text-gray-700">📋 戦略解説</h2>
                <p className="text-gray-500 text-center">
                  コンテンツを生成すると、各セクションの詳細な戦略ポイントがここに表示されます
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}

function generateEmail1(formData: FormData): string {
  if (formData.tone === 'influencer') {
    return `件名: ${formData.productName}を公開します【日本１位を取るので、仲間の募集です】

こんにちは、○○です。
${formData.productName}を公開します。

■ ${formData.productName}とは
日本人の成長と成果創出をサポートします。

□ なぜ、やるのか？
日本の競争力が下がっており、個人のスキルアップが急務です。
国内だけで競っていても、成長に限界があります。

成功している人たちは、常に新しいスキルを身につけています。
なぜなら成長が止まったら、すぐに置いていかれるから。
僕は多くの成功者を見てきて、共通点に気づきました。

じゃあ、どうするか？
思考を「現状維持から成長」に移動するだけです。これで無限のチャンスです。
こういった内容を${formData.productName}で伝えます。次で詳しく説明します。

■${formData.productName}の内容とは
次の３つの内容を提供します。

・その①：成果創出に必要な情報
・その②：成果創出に最適な環境
・その③：安心して絡める仲間達

□その①：成果創出に必要な情報
専用コミュニティで情報提供します。

情報提供しつつ、そこから実践的なコンテンツを作ります。
そして実践を通じて成果を生みつつ、事業化します。

これだけじゃなく、他にも色々なビジネスを作る予定。
学ぶだけじゃなく、実際に参加して成長してください。成果を分かち合います。

□その②：成果創出に最適な環境
完全に独学で、成果を出せるか？
YESだけど、効率が悪いと思います。

僕の身の回りでは、急激に成果を出す人が増えています。
１人の仲間が成果を出すと、その情報が広まりました。

仲間が挑戦して結果を出せば、自分も行動しようと思えます。
環境があると、人は行動できます。この環境も提供します。

専用コミュニティだけじゃなく、リアルイベントも作ります。
定期的に「成果報告会」も開催します。メンバーのみ参加可能。
あとは定期的に「実践合宿イベント」も開催します。

外に出て人と会い空気を感じ、そこから行動に繋げます。
日本人の成長サポートは、僕の夢でした。これから実行します。

□その③：安心して絡める仲間達
${formData.productName}は「スクール」じゃないです。
本気で成長する日本人が集い、高め合う場所です。

・時にはビジネス相談して、そこからアイデアを考える
・時には仲間の事業をサポートして、互いに成果を分かち合う
・時には遊び企画を実行し、そこからもアイデアが生まれる

こういった環境を作ります。
メンバー全員と面談して、相性や目標の合うメンバーだけを集めます。

■初期メンバーの募集です
本気で成果創出を目指したい人へ、是非どうぞ。

・成果創出するだけじゃなく、事業も作ります
・まずは成長できる環境とコミュニティの構築
・次に実践的なメディアを作り、業界１位にします

僕は発信と実践が得意で、突き抜けました。
${formData.productName}でもトップを取ります。初期メンバー募集です。

価格は詳細資料に記載。初回募集は１０名限定です。
興味ある方は、下記からフォーム入力ください。

>> 資料請求フォーム（３秒で完了します）

募集開始は「今週末の土曜日：○月○日」です。
お昼から実施予定。ぜひ予定を空けておいてください。

以上です。これは僕の新しい挑戦です。
昔から日本人の成長を支援することが夢でした。実行します。

👉ポイント：最後は夢で締めて、共感と信頼を獲得する
`;
  } else {
    return `件名: 【重要】${formData.productName}のご案内について

いつもお世話になっております。

この度、新しいサービス「${formData.productName}」のご案内をさせていただきます。

■ ${formData.productName}について
現代の競争環境において、継続的な成長と学習は必要不可欠となっております。
当サービスは、皆様の成長支援と成果創出を目的として開発いたしました。

■ サービス内容
次の３つの要素を中心に構成しております。

１．体系的な学習プログラム
専門的な知識とスキルを効率的に習得いただけるカリキュラムをご用意しております。

２．実践的な環境の提供
学習した内容を実際に活用できる場を提供し、実践を通じた成長を支援いたします。

３．同志との ネットワーク構築
同じ目標を持つ仲間とのつながりを通じて、継続的な学習とモチベーション維持を図ります。

■ 募集概要
・対象者：本気で成長を目指される方
・募集人数：初回限定１０名様
・期間：○ヶ月間の集中プログラム
・形式：オンライン＋対面イベント

詳細につきましては、下記より資料をご請求ください。

>> 詳細資料請求フォーム

募集開始日：○月○日（土）12:00〜
※お申込み多数の場合は、面談により選考させていただきます。

皆様の成長と成功を心より応援しております。
ご質問等ございましたら、お気軽にお問い合わせください。

何卒よろしくお願い申し上げます。

${formData.productName}運営事務局`;
  }
}

function generateEmail2(formData: FormData): string {
  if (formData.tone === 'influencer') {
    return `件名: 【${formData.productName}の件／○○】

こんにちは、○○です。
資料請求いただき、ありがとうございます。

✓ これらの内容を共有します
・１．${formData.productName}の資料について
・２．${formData.productName}の面談について

**■１．${formData.productName}の資料について**
下記にまとめました。クリックで開きます。

**${formData.productName}の説明資料**
https://example.com/resource

質問があれば、お気軽に連絡ください。
事前質問があると、面談もスムーズです。是非どうぞ

**${formData.productName}の事前質問フォーム**
https://example.com/questionnaire

**■２．${formData.productName}の面談について**
今回は信頼できるパートナーと一緒に運営しています。

過去に複数のプロジェクトを一緒に手がけており、
営業面、マーケ面で、僕が最も信頼している仲間です。
既に長年の付き合いで、安心してビジネスを作れます。

僕１人で設計するよりも、大幅に${formData.productName}の価値が高まりました。
こういったパートナーがいると、より良いサービスを提供できます。

なお面談に関しては、肩の力を抜いてOKです。
お互いの相性、今後の目標などを擦り合わせてお話します。

最適なメンバーを集め、楽しく、そして強い組織を作ります。

そして面談日程は「○月○日〜○日」を予定しています。
面談は昼から夜にて実施します。調整いただけたら嬉しいです。

今回はメッセージは以上です。
募集開始は「○月○日」です。正午にメールします`;
  } else {
    return `件名: 【資料請求完了】${formData.productName}の資料をお送りします

お忙しい中、お時間をいただきありがとうございます。

${formData.productName} 代表の○○と申します。
この度は、お問合わせ＆資料請求をいただき、ありがとうございます！
ご興味をもっていただき、大変うれしく思います。

本メールに講座のPDF資料を添付させていただきますので、ご確認ください。

【${formData.productName} 資料はこちら】
https://example.com/resource

※上記リンクからご覧になれます。
（スマホで読み込みエラーが発生する場合、PCからご覧ください）

【事前質問フォームのご記入をお願いします】
https://example.com/questionnaire

資料をご確認いただいた後、ぜひ上記の事前質問フォームにもご記入ください。
いただいたご質問やご要望は、講座内容に反映させていただきます。
※フォーム記入時間は約3分程度です。

【面談日程についてのご案内】
${formData.productName}次回開催日程は、現在未定となっております。
開催日が決まり次第、本メールアドレスより告知いたします。

事前面談では、以下の内容についてお話しさせていただきます：
• ${formData.productName}の講座内容詳細
• 受講生様の現在の状況や目標の確認
• 講座内容が目標達成に適しているかの判断
• 受講料金および今後のスケジュールについて

面談はオンライン（Zoom）にて、約15分程度を予定しております。
ご不明な点やご質問がございましたら、遠慮なくお聞かせください。

＝＝＝＝＝＝＝＝＝＝＝＝＝
最後に、スケジュールについてご案内いたします。

【今後の${formData.productName}開催スケジュール】
・第○期：2024年○月開催予定
・第○期：開催時期調整中

※日程が決まり次第ご連絡いたします。
そのタイミングで、「${formData.productName} 事前面談＆説明」の受付も開始いたします。
もしご興味があればご応募ください。

＜参加までの流れ＞
１資料請求　←現在はここです。
２事前面談＆説明（ここまで無料）
３事前学習期間＆サポート
４本講座実施
５受講後サポート期間

■もちろん、面談にて内容を確認してから、参加可否をご判断いただいても大丈夫です。
ただし、定員に限りがあるため、満員となる場合がございます。

通話面談内容ですが、${formData.productName}の詳細などを説明させていただきます。
また、どんなことを学びたいか、何か不安点がないかといったことについてお話を伺いたく思っています。

もちろん、面談後にご参加の可否をご判断いただいて大丈夫です。

何かご質問がある場合は、このメールにご返信という形でお願いいたします。

★重要★
本アドレスから多くの方にメールを一斉送信している関係で、お使いのメールソフトによっては、「開催告知などのメール」が、ごくまれに迷惑メールフォルダに入ってしまうことがあるようです。

${formData.productName}に特に興味をお持ちの方は、送信者アドレスをアドレス帳に登録をしていただくようにお願いいたします。

以上となります。
ご確認のほど、よろしくお願いいたします。

ーーー
${formData.productName}代表○○`;
  }
}

function generateEmail3(formData: FormData): string {
  return `件名: 【アンケート回答】${formData.productName}についてお答えします

いつもお世話になっております。

先日の${formData.productName}に向けてのアンケートの際には、たくさんのご回答をいただきありがとうございました！

今回も100件以上のご回答をいただき、大変うれしく思います。
いただいたアンケートは、講座内容にも反映いたします。

＝＝＝＝＝＝＝＝＝＝＝＝＝
■アンケート内容とその回答について
＝＝＝＝＝＝＝＝＝＝＝＝＝

今回アンケートでいただいた意見のなかで、特に多かったものを一部ご紹介させていただきます。いただいたご意見は、講座内容に反映予定です。

【${formData.productName}で「特に学びたいこと」について】

■ 継続的に成果を出すための具体的な方法
■ 実践的なスキルアップ手法
■ 成功者のマインドセット

（回答）
講座内容に盛り込んでいます。
実践的なカリキュラムをご用意しています。

■ 継続案件を複数確保する方法
■ 安定した収益基盤の構築方法

（回答）
カリキュラムに盛り込んでいます。
講座内でも「実際に営業をかけてみよう」などのワークがあります。
もちろん、受注した収益は受講生に入ります。

■ 成功するためのメンタル・心構え
■ セルフマネジメントの方法

（回答）
カリキュラムに盛り込んでいます。まさに、「継続的に成果を出すために最も大事なこと」と言っても過言ではありませんので、スキル以上に重点的にお伝えします。

【その他のご質問への回答】

■ 料金について教えてください
（回答）
詳細については、面談時にご説明いたします。

■ 個別サポートはありますか？
（回答）
はい、個別サポートも充実しています。参加者一人ひとりの目標に合わせたサポートを行います。

＝＝＝＝＝＝＝＝＝＝＝＝＝

最後に、募集スケジュールについて再度ご案内いたします。

【募集開始日】
2024年○月○日午後20時～（日本時間）

※時間になりましたら、参加申込の受付を開始致します。

以上となります。ここまでご覧いただき、ありがとうございました。

何かご質問がありましたら、メールにてご連絡ください。

${formData.productName}代表○○`;
}

function generateEmail4(formData: FormData): string {
  return `件名: 【本日開始】${formData.productName}面談受付を開始します

いつもお世話になっております。

こんばんは。${formData.productName}代表の○○です。

本日の20時より、${formData.productName}の事前面談受付を開始します。

20時ごろに、申し込みページが記載されたメールをお送りしますので、そちらから申請をお願いいたします。

募集開始前に、多くいただいた質問について回答させていただきます。

＝＝＝＝＝

【質問と回答】

Q.入力フォームには、どのような項目がありますか？
A.下記の項目がございます。必須項目を入力いただければ、問題なくご応募いただけます。

（必須）お名前、メールアドレス、面談希望日程（第一希望～三希望まで）
（任意）その他・自由記述欄

Q.面談希望日程は、どの期間を申請できますか？
A.2024年○月○日以降の期間となります。時間帯は12時30分～23時の間です。

※調整の都合上、できるだけ広く日程を申請いただけると助かります。

＝＝＝＝＝

面談申請が完了しましたら、詳細についてご連絡いたします。

募集定員は限定となる予定ですが、事前の資料請求は多くの方にいただいております。

すぐに募集枠が埋まってしまう可能性もございますが、まずは慎重に、募集案内資料を読み進めていただくようお願いします。

資料はこちら
https://example.com/resource

それでは、面談でお会いできることを楽しみにしております！

以上となります。よろしくお願いします。
${formData.productName}代表○○`;
}

function generateEmail5(formData: FormData): string {
  return `件名: 【募集開始】${formData.productName}面談申請受付を開始いたします

いつもお世話になっております。

こんばんは。${formData.productName}代表の○○です。

20時になりましたので、今から正式に、${formData.productName}の応募受付を開始いたします。

ご参加を希望される場合は、下記ページより申請をお願いいたします。

※今後のご案内が不要な場合は、メールの一番下の解除リンクより配信停止をお願いします。

＝＝＝＝＝

【${formData.productName} 面談申請ページ】
https://example.com/application

＝＝＝＝＝

面談の受付日程は2024年○月○日以降となります。

面談申請が完了しましたら、詳細について個別にご連絡いたします。

参加をお考えの方は、まずは慎重に、募集案内資料を読み進めていただくようお願いします。

【資料はこちら】
https://example.com/resource

■プログラム概要■
▼サービス内容
実践的なカリキュラムとサポート体制

▼価格
詳細は面談時にご案内

▼主な特徴
少人数制による手厚いサポート

▼期待できる成果
継続的な成長とスキルアップ

充実した期間を、共に過ごせたら幸いです！

以上、よろしくお願いします。
${formData.productName}代表○○

今後の案内を希望しない場合は、こちらから解除できます。`;
}

function generateEmail6(formData: FormData): string {
  return `件名: 【面談調整】${formData.productName}面談日程のご案内

いつもお世話になっております。

この度は${formData.productName}へのご応募をいただき、ありがとうございます。

面談日程について個別にご連絡いたします。

＝＝＝＝＝＝＝＝＝＝＝＝＝
【面談実施概要】
＝＝＝＝＝＝＝＝＝＝＝＝＝

■面談方法：オンライン（Zoom）
■面談時間：15分程度
■面談内容：
・${formData.productName}の詳細説明
・ご質問への回答
・今後の目標や期待値の擦り合わせ
・参加可否の最終確認

■面談の目的：
1. 最適なメンバーを集め、充実した学習環境を作ること
2. お互いの相性や方向性を確認すること
3. ${formData.productName}があなたの目標達成に最適かを判断すること

＝＝＝＝＝＝＝＝＝＝＝＝＝
【面談の流れ】
＝＝＝＝＝＝＝＝＝＝＝＝＝

1. 簡単な自己紹介とご質問への回答（5分）
2. ${formData.productName}の詳細説明（5分）
3. 参加意思の確認と今後の流れ（5分）

■料金：詳細は面談時にご案内
■決済方法：銀行振込
■サポート内容：実践的なカリキュラムと個別サポート

面談では、肩の力を抜いてリラックスしてお話しください。
お互いの相性や今後の目標などを擦り合わせる機会として活用させていただきます。

もちろん、面談後に参加可否をご判断いただいて大丈夫です。

それでは、面談でお会いできることを楽しみにしております。

${formData.productName}代表○○

※面談日程については、別途個別にご連絡いたします。`;
}

function generateScript(formData: FormData): string {
  return `【面談用トークスクリプト】${formData.productName}

■オープニング（アイスブレイク）
こんにちは。本日面談します○○です。よろしくお願いします。

今日の面談の内容は2つあります。

枠が限定のところ多くの応募をいただいており、最適なメンバーを選ぶために大変恐縮ながら色々と質問をさせていただいております。

前半質問をさせていただき、その審査に通過したら、${formData.productName}の内容説明をします。（仮クロージング①）

まず、${formData.productName}は2つの目的があります。

それは、継続的に成果を出せる人を増やすこと、そして、そういった人材のみの強いチームや居心地のいい場所を作ることです。

そのため、恐縮ながら質問をさせていただき、状況確認をさせていただくことをご理解ください。

ただですね、2点の本題に入る前に、先に○○さんの不安点をすべて解消してから、本題に入りたいなと思っています。

些細な質問でも、全然問題ございませんので、なにかご質問はありますか？（疑問を消す）

※疑問点全部吐き出してなさそうなら、「どんな些細なことでも大丈夫です。疑問点や不明点は、今のところないということで大丈夫ですか？」と念入りに聞く。

■審査のための質問項目

それでは、1つめの本題として、質問項目を用意しましたので、質問のほうに入らせていただきますね。

1. 事前に資料と「よくある質問」をお送りしましたが、読まれましたか？

2. 作業をするためのPCはお持ちでしょうか？

3. ご意思の確認なんですが、もしも審査に通過して、内容説明に納得したら「${formData.productName}に参加したい！」というご意思はありますか？→（仮クロージング）

4. ご参加後にどうなっていたいかのイメージがもしあれば、教えてください。

■審査結果の発表

ありがとうございます。

今回想定を超える応募をいただいた関係で、このような審査という形をとらせていただきました。

お付き合い頂きまして、ありがとうございました。

○○さんが結果を出す意思があるということが確認できたので、結果としては「合格」とさせていただきます。

恐縮ながらこのような質問をさせていただき、ありがとうございました。

■サービス内容説明

それでは「${formData.productName}」の内容説明に入らせていただきます。

【主な特徴・サービス内容】
実践的なカリキュラムと充実したサポート体制

【独自の価値提案】
少人数制による手厚いサポートと継続的な成長支援

【期待できる成果】
継続的なスキルアップと目標達成

【他社との違い】
個別サポートと実践重視のアプローチ

何か質問などは、ございますでしょうか？（質問をすべて消す）

■価格提示とクロージング

では、改めて金額をご案内させていただきます。

詳細は事前にご案内させていただいておりますが、決済方法としては銀行振込です。

詳細はあとでお送りしますが、お振込み確認後に専用のコミュニティにご招待いたします。

ご参加は希望されますか？

■次のステップ

【参加希望の場合】
ありがとうございます！それでは詳細資料と振込先をお送りいたします。

【検討希望の場合】
承知いたしました。ご検討期間はいつまでを予定されていますか？
他に確認が必要な点はございますか？

【参加見送りの場合】
承知いたしました。今後また機会がございましたら、ぜひお声がけください。

■面談終了

本日はお時間をいただき、ありがとうございました。
詳細資料をメールでお送りしますので、ご確認ください。

よろしくお願いいたします。

送信者情報：${formData.productName}代表`;
}